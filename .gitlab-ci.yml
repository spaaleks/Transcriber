stages:
  - docker_build
  - repo-sync

.build_template:
  stage: docker_build
  image: docker:latest
  services:
    - docker:dind
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "main" ]]; then
        tag=""
        echo "Running on default branch 'main': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -f .build/Dockerfile -t "$TARGET_IMAGE$tag" .
    - docker push "$TARGET_IMAGE$tag"

# GitLab registry
docker-build:
  extends: .build_template
  variables:
    TARGET_IMAGE: $CI_REGISTRY_IMAGE
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - exists: [.build/Dockerfile]

# Docker Hub
docker-build-dockerhub:
  extends: .build_template
  variables:
    TARGET_IMAGE: $DOCKERHUB_IMAGE
  before_script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev"'
    - if: $DOCKERHUB_USER != null && $DOCKERHUB_PASSWORD != null && $DOCKERHUB_IMAGE != null
    - exists: [.build/Dockerfile]

# Quay
docker-build-quay:
  extends: .build_template
  variables:
    TARGET_IMAGE: $REMOTE_REGISTRY_QUAY/$REMOTE_REGISTRY_IMAGE_QUAY
  before_script:
    - echo "$REMOTE_REGISTRY_PASSWORD_QUAY" | docker login -u "$REMOTE_REGISTRY_USER_QUAY" --password-stdin $REMOTE_REGISTRY_QUAY
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev"'
    - if: $REMOTE_REGISTRY_QUAY != null && $REMOTE_REGISTRY_USER_QUAY != null && $REMOTE_REGISTRY_PASSWORD_QUAY != null && $REMOTE_REGISTRY_IMAGE != null
    - exists: [.build/Dockerfile]

sync-to-github:
  stage: repo-sync
  image: bitnami/git:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == "main-github"'
  before_script:
    - set -euo pipefail
    - git config --global user.name  "${GIT_MIRROR_USER:-GitLab CI Mirror}"
    - git config --global user.email "${GIT_MIRROR_EMAIL:-ci@example.invalid}"
    # ensure full history if shallow
    - git fetch --prune --unshallow || true
    - git fetch --all --tags
  script:
    - git checkout -B mirror-main origin/main
    - rm -f .gitlab-ci.yml
    - git add -A
    # preserve last commit metadata
    - COMMITTER_DATE="$(git log -1 --format=%cI)"
    - AUTHOR_DATE="$(git log -1 --format=%aI)"
    - export GIT_COMMITTER_DATE="$COMMITTER_DATE"
    - export GIT_AUTHOR_DATE="$AUTHOR_DATE"
    - git commit --amend --no-edit --reset-author --allow-empty
    # push to GitHub main
    - export GITHUB_REMOTE_URL="https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/${GITHUB_REPO}.git"
    - git remote add github "$GITHUB_REMOTE_URL" || git remote set-url github "$GITHUB_REMOTE_URL"
    - git push --force github mirror-main:main
  variables:
    GIT_STRATEGY: fetch
  dependencies: []
  needs: []
